[package]
name = "itconfig"
version = "1.1.1"
authors = ["Dmitriy Pleshevskiy <dmitriy@ideascup.me>"]
description = "Easy build a configs from environment variables and use it in globally."
categories = ["config", "web-programming"]
keywords = ["config", "env", "configuration", "environment", "macro"]
edition = "2018"
license = "MIT"
repository = "https://github.com/icetemple/itconfig-rs"
homepage = "https://github.com/icetemple/itconfig-rs"
documentation = "https://docs.rs/itconfig"
readme = "../README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["primitives"]

macro = ["itconfig-macro"]

primitives = ["numbers", "bool"]
numbers = ["int", "uint", "float"]
int = ["i8", "i16", "i32", "i64", "i128", "isize"]
uint = ["u8", "u16", "u32", "u64", "u128", "usize"]
float = ["f32", "f64"]

i8    = []
i16   = []
i32   = []
i64   = []
i128  = []
isize = []

u8    = []
u16   = []
u32   = []
u64   = []
u128  = []
usize = []

f32   = []
f64   = []

bool  = []

# deprecated since 1.1
json_array = ["serde_json"]

[dependencies]
serde_json = { version = "1", optional = true }
itconfig-macro = { version = "1.1", path = "../itconfig-macro", optional = true }

[dev-dependencies]
lazy_static = "1.4.0"
# required for examples
rocket = "0.5.0-rc.2"
hyper = { version = "0.14.4", features = ["full"] }
serde_json = "1.0.62"
tokio = { version = "1.2.0", features = ["macros", "rt-multi-thread"] }
bytes = "1.0.1"
futures-util = { version = "0.3.13", default-features = false }
pretty_env_logger = "0.4.0"
dotenv = "0.15.0"
diesel = { version = "1.4.8", features = ["postgres"] }

[badges]
maintenance = { status = "passively-maintained" }

# https://docs.rs/about
[package.metadata.docs.rs]
all-features = true

[[example]]
name = "diesel"
path = "../examples/diesel/main.rs"
required-features = ["macro"]

[[example]]
name = "hyper"
path = "../examples/hyper.rs"
required-features = ["macro"]

[[example]]
name = "rocket"
path = "../examples/rocket.rs"
required-features = ["macro"]

